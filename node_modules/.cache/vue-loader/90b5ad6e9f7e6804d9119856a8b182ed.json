{"remainingRequest":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kali/Documents/web_application/FE/src/components/students/StudentInformation.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/kali/Documents/web_application/FE/src/components/students/StudentInformation.vue","mtime":1570784723569},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport SMSService from '../../service/sms.js';\nimport StudentService from '../../service/students.js';\nimport SelectForm from '../form/SelectForm.vue';\nimport DiaryStudent from './DiaryStudent.vue';\nimport Date from '../form/Date.vue';\nimport Time from '../form/Time.vue';\nimport Utility from '../../Utility/Utility.js';\n\nexport default {\n\tname: 'StudentInformation',\n\tmounted() {\n\t\t$('.collapsible').collapsible();\n\t\tthis.$store.dispatch('fetchTeachers');\n\t\tthis.$store.dispatch('fetchLessons');\n\t\tthis.fetchStudent();\n\t\tthis.fetchStudentDiarys();\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tStudent: {\n\t\t\t\t_id: 'key',\n\t\t\t\tschool: 'school',\n\t\t\t\tgrade: 'grade',\n\t\t\t\tphone: 'phone',\n\t\t\t\tparent_phone: 'parent phone',\n\t\t\t\tunitStudyId: 'unitStudyId',\n\t\t\t},\n\t\t\tModifyingStudent: false,\n\t\t\tCompletedDiarys: [],\n\t\t\tnoneCompletedDiarys: [],\n\t\t\tDiary: {\n\t\t\t\tteacher: null,\n\t\t\t\tlesson_type: null,\n\t\t\t\tlesson_time: {\n\t\t\t\t\tdate: Utility.getDateBaseNow(0, 0, 0),\n\t\t\t\t\tstart: Utility.getTimeBaseNow(-3, 0),\n\t\t\t\t\tend: Utility.getTimeBaseNow(0, 0),\n\t\t\t\t},\n\t\t\t\tlesson_about: '',\n\t\t\t\tlesson_complete: false,\n\t\t\t},\n\t\t\tisSelectAll: false,\n\t\t\tPay: {\n\t\t\t\tTime: 0,\n\t\t\t\tCount: 0,\n\t\t\t},\n\t\t\tload: {\n\t\t\t\tstart: Utility.getDateBaseNow(0, -1, 0),\n\t\t\t\tend: Utility.getDateBaseNow(0, 0, 0),\n\t\t\t}\n\t\t};\n\t},\n\tcomputed: {\n\t\tgetTeachers() {\n\t\t\tconst TeachersInfo = this.$store.getters.getTeachers;\n\t\t\tlet ret = [];\n\t\t\tTeachersInfo.forEach(teacher => {\n\t\t\t\tret.push({\n\t\t\t\t\tid: teacher._id,\n\t\t\t\t\tname: teacher.name,\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn ret;\n\t\t},\n\t\tgetLessons() {\n\t\t\tconst LessonsInfo = this.$store.getters.getLessons;\n\t\t\tlet ret = [];\n\t\t\tLessonsInfo.forEach(lesson => {\n\t\t\t\tret.push({\n\t\t\t\t\tid: lesson._id,\n\t\t\t\t\tname: lesson.type,\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn ret;\n\t\t},\n\t},\n\tmethods: {\n\t\tAllSelect() {\n\t\t\tthis.isSelectAll = !this.isSelectAll;\n\t\t},\n\t\tmodifyStudent() {\n\t\t\tthis.ModifyingStudent = true;\n\t\t},\n\t\tdoModifyStudent() {\n\t\t\tthis.ModifyingStudent = false;\n\t\t\tStudentService.updateStudent(this.Student._id, this.Student)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.$notify({\n\t\t\t\t\t\ttitle: response.data.message,\n\t\t\t\t\t\ttext: '수정 되었습니다.',\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t});\n\t\t\t\t\tthis.Student = response.data.Student;\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tthis.$notify({\n\t\t\t\t\t\ttitle: error.data.message,\n\t\t\t\t\t\ttext: '실패하였습니다.',\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t});\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t},\n\t\tonChangeTeachers(value) {\n\t\t\tthis.Diary.teacher = value;\n\t\t},\n\t\tonChangeLessons(value) {\n\t\t\tthis.Diary.lesson_type = value;\n\t\t},\n\t\tonChangeDiaryDate(value) {\n\t\t\tthis.Diary.lesson_time.date = value;\n\t\t},\n\t\tonChangeDiaryStart(value) {\n\t\t\tthis.Diary.lesson_time.start = value;\n\t\t},\n\t\tonChangeDiaryEnd(value) {\n\t\t\tthis.Diary.lesson_time.end = value;\n\t\t},\n\t\tonChangeReloadStart(value) {\n\t\t\tthis.load.start = value;\n\t\t\tthis.fetchStudentDiarys();\n\t\t},\n\t\tonChangeReloadEnd(value) {\n\t\t\tthis.load.end = value;\n\t\t\tthis.fetchStudentDiarys();\n\t\t},\n\t\tisValidDiaryDuration() {\n\t\t\tif (this.Diary.lesson_time.date === '' || this.Diary.lesson_time.start === '' || this.Diary.lesson_time.end === '')\n\t\t\t\treturn false;\n\t\t\telse if (Utility.compareTime(this.Diary.lesson_time.start, this.Diary.lesson_time.end) >= 0)\n\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t},\n\t\tisValidDiaryTeacher() {\n\t\t\treturn this.Diary.teacher !== null;\n\t\t},\n\t\tisValidDiaryLesson() {\n\t\t\treturn this.Diary.lesson_type !== null;\n\t\t},\n\t\tonChangeDiary(value, type, typeValue) {\n\t\t\tif (type === 'Complete') {\n\t\t\t\tvalue.lesson_complete = true;\n\t\t\t} else if (type === 'Edit') {\n\t\t\t\t//\n\t\t\t}\n\t\t\tvalue.lesson_time.date = Utility.StringToDate(value.lesson_time.date);\n\t\t\tStudentService.updateStudentDiary(value._id, {\n\t\t\t\tlesson_complete: value.lesson_complete,\n\t\t\t\tlesson_time: JSON.stringify(value.lesson_time),\n\t\t\t\tlesson_about: value.lesson_about,\n\t\t\t})\n\t\t\t\t.then(response => {\n\t\t\t\t\tthis.$notify({\n\t\t\t\t\t\ttitle: response.data.message,\n\t\t\t\t\t\ttext: '성공!',\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t});\n\t\t\t\t\tif (type === 'Complete') {\n\t\t\t\t\t\tthis.CompletedDiarys.push(response.data.Diary);\n\t\t\t\t\t\tthis.noneCompletedDiarys = Utility.removeElemntByValue(this.noneCompletedDiarys, response.data.Diary);\n\t\t\t\t\t\tthis.Pay.Count--;\n\t\t\t\t\t\tthis.Pay.Time -= Utility.duration(value.lesson_time.start, value.lesson_time.end);\n\t\t\t\t\t} else if (type === 'Edit') {\n\t\t\t\t\t\tthis.Pay.Time += Utility.duration(typeValue.start, typeValue.end) - Utility.duration(value.lesson_time.start, value.lesson_time.end);\n\t\t\t\t\t\tSMSService.sendSMS({\n\t\t\t\t\t\t\tto: this.Student.parent_phone,\n\t\t\t\t\t\t\ttext: this.Student.name + '학생의 수정된 수업 입니다.\\n' + Utility.LessonInfo(value),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t},\n\t\tfetchStudent() {\n\t\t\tStudentService.getStudent(this.$route.params.StudentId)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.Student = response.data.Student;\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tthis.$notify({\n\t\t\t\t\t\ttitle: '학생 정보를 가져오는데 문제가 발생하였습니다.',\n\t\t\t\t\t\ttext: '관리자에게 문의 바랍니다.',\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t});\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t},\n\t\tfetchStudentDiarys() {\n\t\t\twhile (this.CompletedDiarys.length) this.CompletedDiarys.pop();\n\t\t\twhile (this.noneCompletedDiarys.length) this.noneCompletedDiarys.pop();\n\t\t\tStudentService.getStudentDiaryByStudentId(this.$route.params.StudentId, {\n\t\t\t\tstart: this.load.start,\n\t\t\t\tend: this.load.end,\n\t\t\t})\n\t\t\t\t.then((response) => {\n\t\t\t\t\tresponse.data.Diarys.forEach(diary => {\n\t\t\t\t\t\tif (diary.lesson_complete) {\n\t\t\t\t\t\t\tthis.CompletedDiarys.push(diary);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.noneCompletedDiarys.push(diary);\n\t\t\t\t\t\t\tthis.Pay.Time += parseFloat(Utility.duration(diary.lesson_time.start, diary.lesson_time.end));\n\t\t\t\t\t\t\tthis.Pay.Count++;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tthis.$notify({\n\t\t\t\t\t\ttitle: '성공적으로 로딩했습니다.',\n\t\t\t\t\t\t// text: error,\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tthis.$notify({\n\t\t\t\t\t\ttitle: '에러 발생!',\n\t\t\t\t\t\ttext: error,\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t});\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t},\n\t\tAddStudentDiary() {\n\t\t\tif (!this.isValidDiaryDuration()) {\n\t\t\t\tthis.$notify({\n\t\t\t\t\ttitle: '시간이 잘 못 입력되었습니다.',\n\t\t\t\t\ttext: '종료시간이 더 빠릅니다.',\n\t\t\t\t\ttype: 'error',\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t} else if (!this.isValidDiaryTeacher()) {\n\t\t\t\tthis.$notify({\n\t\t\t\t\ttitle: '지도한 선생님을 입력해주세요',\n\t\t\t\t\ttext: '다시 입력해주세요',\n\t\t\t\t\ttype: 'error',\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t} else if (!this.isValidDiaryLesson()) {\n\t\t\t\tthis.$notify({\n\t\t\t\t\ttitle: '수업한 내용을 입력해주세요',\n\t\t\t\t\ttext: '다시 입력해주세요',\n\t\t\t\t\ttype: 'error',\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tStudentService.addStudentDiary({\n\t\t\t\tstudent_id: this.Student._id,\n\t\t\t\tteacher: this.Diary.teacher,\n\t\t\t\tlesson_type: this.Diary.lesson_type,\n\t\t\t\tlesson_time: JSON.stringify(this.Diary.lesson_time),\n\t\t\t\tlesson_about: this.Diary.lesson_about,\n\t\t\t})\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.$notify({\n\t\t\t\t\t\ttitle: response.data.msg,\n\t\t\t\t\t\ttext: '성공!',\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t});\n\t\t\t\t\tthis.Pay.Count++;\n\t\t\t\t\tthis.Pay.Time += parseFloat(Utility.duration(response.data.Diary.lesson_time.start, response.data.Diary.lesson_time.end));\n\t\t\t\t\tthis.noneCompletedDiarys.push(response.data.Diary);\n\t\t\t\t\tconsole.log('init');\n\t\t\t\t\tSMSService.sendSMS({\n\t\t\t\t\t\tto: this.Student.parent_phone,\n\t\t\t\t\t\ttext: this.Student.name + '학생의 수업 내용입니다.\\n' + Utility.LessonInfo(response.data.Diary),\n\t\t\t\t\t})\n\t\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t\tconsole.log('success' + response.data);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\t\tthis.$notify({\n\t\t\t\t\t\t\t\ttitle: '메세지 전송에 실패하였습니다.',\n\t\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconsole.log('send sms error' + error.message);\n\t\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tthis.$notify({\n\t\t\t\t\t\ttitle: '실패..',\n\t\t\t\t\t\ttext: '실패..',\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t});\n\t\t\t\t\tconsole.log('diary error' + error.message);\n\t\t\t\t});\n\t\t},\n\t},\n\tcomponents: {\n\t\tSelectForm,\n\t\tDiaryStudent,\n\t\tDate,\n\t\tTime,\n\t},\n};\n",{"version":3,"sources":["StudentInformation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"StudentInformation.vue","sourceRoot":"src/components/students","sourcesContent":["<template>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"card\">\n                <div class=\"card-content\">\n                    <h4 class=\"card-title\">{{ Student.name }}</h4>\n                    <div class=\"col s6\">\n                        <label for=\"school\" class=\"active\">학교</label>\n                        <input type=\"text\" name=\"school\" v-model=\"Student.school\" id=\"school\"\n                               :disabled=\"!ModifyingStudent\" placeholder=\"학교\">\n                    </div>\n                    <div class=\"col s6\">\n                        <label for=\"grade\" class=\"active\">학년</label>\n                        <input type=\"text\" name=\"grade\" v-model=\"Student.grade\" id=\"grade\"\n                               :disabled=\"!ModifyingStudent\" placeholder=\"학년\">\n                    </div>\n                    <div class=\"col s4\">\n                        <label for=\"unitStudy-id\" class=\"active\">유닛스터디 ID</label>\n                        <input type=\"text\" name=\"unitStudy-id\" v-model=\"Student.unitStudyId\" id=\"unitStudy-id\"\n                               :disabled=\"true\" placeholder=\"unitStudyID\">\n                    </div>\n                    <div class=\"col s4\">\n                        <label for=\"phone\" class=\"active\">학생 전화번호</label>\n                        <input type=\"text\" name=\"phone\" v-model=\"Student.phone\" id=\"phone\"\n                               :disabled=\"!ModifyingStudent\" placeholder=\"전화번호\">\n                    </div>\n                    <div class=\"col s4\">\n                        <label for=\"parent-phone\" class=\"active\">부모님 전화번호</label>\n                        <input type=\"text\" name=\"parent-phone\" v-model=\"Student.parent_phone\" id=\"parent-phone\"\n                               :disabled=\"!ModifyingStudent\" placeholder=\"부모님 전화번호\">\n                    </div>\n                </div>\n                <div class=\"card-action\">\n                    <a v-if=\"!ModifyingStudent\" href=\"javascript:void(0);\" @click=\"modifyStudent()\" id=\"change-btn\">\n                        <i class=\"icon icon-pencil\"></i> 수정하기\n                    </a>\n                    <a v-else href=\"javascript:void(0);\" @click=\"doModifyStudent()\" id=\"do-chang-btn\">\n                        <i class=\"icon icon-pencil\"></i>완료\n                    </a>\n                </div>\n            </div>\n        </div>\n        <h4>일지 추가</h4>\n        <div class=\"form-control\">\n            <div class=\"row\">\n                <Date class=\"input-field col s4\" v-bind:date=\"Diary.lesson_time.date\" label=\"날짜\"\n                      v-on:input=\"onChangeDiaryDate\"></Date>\n                <Time class=\"input-field col s4\" v-bind:time=\"Diary.lesson_time.start\" label=\"시작 시간\"\n                      v-on:input=\"onChangeDiaryStart\"></Time>\n                <Time class=\"input-field col s4\" v-bind:time=\"Diary.lesson_time.end\" label=\"종료 시간\"\n                      v-on:input=\"onChangeDiaryEnd\"></Time>\n            </div>\n            <div class=\"row\">\n                <SelectForm class=\"input-field col s6\" v-bind:selectList=\"getTeachers\" v-on:input=\"onChangeTeachers\"\n                            name=\"담당 선생님\"></SelectForm>\n                <SelectForm class=\"input-field col s6\" v-bind:selectList=\"getLessons\" v-on:input=\"onChangeLessons\"\n                            name=\"수업 종류\"></SelectForm>\n            </div>\n            <div class=\"row\">\n                <div class=\"input-field col s12\">\n                    <label class=\"active\">상세 내용</label>\n                    <input type=\"text\" id=\"lesson-about\" v-model=\"Diary.lesson_about\">\n                </div>\n                <button class=\"btn waves-effect waves-light\" id=\"add-studentdiary-btn\" @click=\"AddStudentDiary()\"\n                        name=\"action\">일지추가\n                    <i class=\"material-icons right\">send</i>\n                </button>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <h4>일지</h4>\n            <h5>횟수({{ Pay.Count }}) / 시간({{ Pay.Time }})</h5>\n            <ul class=\"collapsible\">\n                <li>\n                    <div class=\"collapsible-header\"><i class=\"material-icons\">clear</i>미결제</div>\n                    <div class=\"collapsible-body\">\n                        <div v-for=\"diary in noneCompletedDiarys\" id=\"noneCompleteDiarys\">\n                            <DiaryStudent v-bind:DiaryInfo=\"diary\" v-on:update=\"onChangeDiary\"></DiaryStudent>\n                        </div>\n                    </div>\n                </li>\n                <li>\n                    <div class=\"collapsible-header\"><i class=\"material-icons\">check</i>결제 완료</div>\n                    <div class=\"collapsible-body\">\n                        <div class=\"row\">\n                            <div class=\"col s6\">\n                                <Date class=\"input-field col s6\" v-bind:date=\"load.start\" label=\"시작\"\n                                      v-on:input=\"onChangeReloadStart\"></Date>\n                                <Date class=\"input-field col s6\" v-bind:date=\"load.end\" label=\"끝\"\n                                      v-on:input=\"onChangeReloadEnd\"></Date>\n                            </div>\n                            <div class=\"col s6\">\n                                <div v-for=\"diary in CompletedDiarys\" id=\"diary-list\">\n                                    <DiaryStudent v-bind:DiaryInfo=\"diary\"></DiaryStudent>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </li>\n            </ul>\n        </div>\n    </div>\n</template>\n\n<script>\n\timport SMSService from '../../service/sms.js';\n\timport StudentService from '../../service/students.js';\n\timport SelectForm from '../form/SelectForm.vue';\n\timport DiaryStudent from './DiaryStudent.vue';\n\timport Date from '../form/Date.vue';\n\timport Time from '../form/Time.vue';\n\timport Utility from '../../Utility/Utility.js';\n\n\texport default {\n\t\tname: 'StudentInformation',\n\t\tmounted() {\n\t\t\t$('.collapsible').collapsible();\n\t\t\tthis.$store.dispatch('fetchTeachers');\n\t\t\tthis.$store.dispatch('fetchLessons');\n\t\t\tthis.fetchStudent();\n\t\t\tthis.fetchStudentDiarys();\n\t\t},\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tStudent: {\n\t\t\t\t\t_id: 'key',\n\t\t\t\t\tschool: 'school',\n\t\t\t\t\tgrade: 'grade',\n\t\t\t\t\tphone: 'phone',\n\t\t\t\t\tparent_phone: 'parent phone',\n\t\t\t\t\tunitStudyId: 'unitStudyId',\n\t\t\t\t},\n\t\t\t\tModifyingStudent: false,\n\t\t\t\tCompletedDiarys: [],\n\t\t\t\tnoneCompletedDiarys: [],\n\t\t\t\tDiary: {\n\t\t\t\t\tteacher: null,\n\t\t\t\t\tlesson_type: null,\n\t\t\t\t\tlesson_time: {\n\t\t\t\t\t\tdate: Utility.getDateBaseNow(0, 0, 0),\n\t\t\t\t\t\tstart: Utility.getTimeBaseNow(-3, 0),\n\t\t\t\t\t\tend: Utility.getTimeBaseNow(0, 0),\n\t\t\t\t\t},\n\t\t\t\t\tlesson_about: '',\n\t\t\t\t\tlesson_complete: false,\n\t\t\t\t},\n\t\t\t\tisSelectAll: false,\n\t\t\t\tPay: {\n\t\t\t\t\tTime: 0,\n\t\t\t\t\tCount: 0,\n\t\t\t\t},\n\t\t\t\tload: {\n\t\t\t\t\tstart: Utility.getDateBaseNow(0, -1, 0),\n\t\t\t\t\tend: Utility.getDateBaseNow(0, 0, 0),\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\tcomputed: {\n\t\t\tgetTeachers() {\n\t\t\t\tconst TeachersInfo = this.$store.getters.getTeachers;\n\t\t\t\tlet ret = [];\n\t\t\t\tTeachersInfo.forEach(teacher => {\n\t\t\t\t\tret.push({\n\t\t\t\t\t\tid: teacher._id,\n\t\t\t\t\t\tname: teacher.name,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\treturn ret;\n\t\t\t},\n\t\t\tgetLessons() {\n\t\t\t\tconst LessonsInfo = this.$store.getters.getLessons;\n\t\t\t\tlet ret = [];\n\t\t\t\tLessonsInfo.forEach(lesson => {\n\t\t\t\t\tret.push({\n\t\t\t\t\t\tid: lesson._id,\n\t\t\t\t\t\tname: lesson.type,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\treturn ret;\n\t\t\t},\n\t\t},\n\t\tmethods: {\n\t\t\tAllSelect() {\n\t\t\t\tthis.isSelectAll = !this.isSelectAll;\n\t\t\t},\n\t\t\tmodifyStudent() {\n\t\t\t\tthis.ModifyingStudent = true;\n\t\t\t},\n\t\t\tdoModifyStudent() {\n\t\t\t\tthis.ModifyingStudent = false;\n\t\t\t\tStudentService.updateStudent(this.Student._id, this.Student)\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\tthis.$notify({\n\t\t\t\t\t\t\ttitle: response.data.message,\n\t\t\t\t\t\t\ttext: '수정 되었습니다.',\n\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.Student = response.data.Student;\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tthis.$notify({\n\t\t\t\t\t\t\ttitle: error.data.message,\n\t\t\t\t\t\t\ttext: '실패하였습니다.',\n\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t});\n\t\t\t},\n\t\t\tonChangeTeachers(value) {\n\t\t\t\tthis.Diary.teacher = value;\n\t\t\t},\n\t\t\tonChangeLessons(value) {\n\t\t\t\tthis.Diary.lesson_type = value;\n\t\t\t},\n\t\t\tonChangeDiaryDate(value) {\n\t\t\t\tthis.Diary.lesson_time.date = value;\n\t\t\t},\n\t\t\tonChangeDiaryStart(value) {\n\t\t\t\tthis.Diary.lesson_time.start = value;\n\t\t\t},\n\t\t\tonChangeDiaryEnd(value) {\n\t\t\t\tthis.Diary.lesson_time.end = value;\n\t\t\t},\n\t\t\tonChangeReloadStart(value) {\n\t\t\t\tthis.load.start = value;\n\t\t\t\tthis.fetchStudentDiarys();\n\t\t\t},\n\t\t\tonChangeReloadEnd(value) {\n\t\t\t\tthis.load.end = value;\n\t\t\t\tthis.fetchStudentDiarys();\n\t\t\t},\n\t\t\tisValidDiaryDuration() {\n\t\t\t\tif (this.Diary.lesson_time.date === '' || this.Diary.lesson_time.start === '' || this.Diary.lesson_time.end === '')\n\t\t\t\t\treturn false;\n\t\t\t\telse if (Utility.compareTime(this.Diary.lesson_time.start, this.Diary.lesson_time.end) >= 0)\n\t\t\t\t\treturn false;\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tisValidDiaryTeacher() {\n\t\t\t\treturn this.Diary.teacher !== null;\n\t\t\t},\n\t\t\tisValidDiaryLesson() {\n\t\t\t\treturn this.Diary.lesson_type !== null;\n\t\t\t},\n\t\t\tonChangeDiary(value, type, typeValue) {\n\t\t\t\tif (type === 'Complete') {\n\t\t\t\t\tvalue.lesson_complete = true;\n\t\t\t\t} else if (type === 'Edit') {\n\t\t\t\t\t//\n\t\t\t\t}\n\t\t\t\tvalue.lesson_time.date = Utility.StringToDate(value.lesson_time.date);\n\t\t\t\tStudentService.updateStudentDiary(value._id, {\n\t\t\t\t\tlesson_complete: value.lesson_complete,\n\t\t\t\t\tlesson_time: JSON.stringify(value.lesson_time),\n\t\t\t\t\tlesson_about: value.lesson_about,\n\t\t\t\t})\n\t\t\t\t\t.then(response => {\n\t\t\t\t\t\tthis.$notify({\n\t\t\t\t\t\t\ttitle: response.data.message,\n\t\t\t\t\t\t\ttext: '성공!',\n\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (type === 'Complete') {\n\t\t\t\t\t\t\tthis.CompletedDiarys.push(response.data.Diary);\n\t\t\t\t\t\t\tthis.noneCompletedDiarys = Utility.removeElemntByValue(this.noneCompletedDiarys, response.data.Diary);\n\t\t\t\t\t\t\tthis.Pay.Count--;\n\t\t\t\t\t\t\tthis.Pay.Time -= Utility.duration(value.lesson_time.start, value.lesson_time.end);\n\t\t\t\t\t\t} else if (type === 'Edit') {\n\t\t\t\t\t\t\tthis.Pay.Time += Utility.duration(typeValue.start, typeValue.end) - Utility.duration(value.lesson_time.start, value.lesson_time.end);\n\t\t\t\t\t\t\tSMSService.sendSMS({\n\t\t\t\t\t\t\t\tto: this.Student.parent_phone,\n\t\t\t\t\t\t\t\ttext: this.Student.name + '학생의 수정된 수업 입니다.\\n' + Utility.LessonInfo(value),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t});\n\t\t\t},\n\t\t\tfetchStudent() {\n\t\t\t\tStudentService.getStudent(this.$route.params.StudentId)\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\tthis.Student = response.data.Student;\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tthis.$notify({\n\t\t\t\t\t\t\ttitle: '학생 정보를 가져오는데 문제가 발생하였습니다.',\n\t\t\t\t\t\t\ttext: '관리자에게 문의 바랍니다.',\n\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t});\n\t\t\t},\n\t\t\tfetchStudentDiarys() {\n\t\t\t\twhile (this.CompletedDiarys.length) this.CompletedDiarys.pop();\n\t\t\t\twhile (this.noneCompletedDiarys.length) this.noneCompletedDiarys.pop();\n\t\t\t\tStudentService.getStudentDiaryByStudentId(this.$route.params.StudentId, {\n\t\t\t\t\tstart: this.load.start,\n\t\t\t\t\tend: this.load.end,\n\t\t\t\t})\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\tresponse.data.Diarys.forEach(diary => {\n\t\t\t\t\t\t\tif (diary.lesson_complete) {\n\t\t\t\t\t\t\t\tthis.CompletedDiarys.push(diary);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.noneCompletedDiarys.push(diary);\n\t\t\t\t\t\t\t\tthis.Pay.Time += parseFloat(Utility.duration(diary.lesson_time.start, diary.lesson_time.end));\n\t\t\t\t\t\t\t\tthis.Pay.Count++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.$notify({\n\t\t\t\t\t\t\ttitle: '성공적으로 로딩했습니다.',\n\t\t\t\t\t\t\t// text: error,\n\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tthis.$notify({\n\t\t\t\t\t\t\ttitle: '에러 발생!',\n\t\t\t\t\t\t\ttext: error,\n\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t});\n\t\t\t},\n\t\t\tAddStudentDiary() {\n\t\t\t\tif (!this.isValidDiaryDuration()) {\n\t\t\t\t\tthis.$notify({\n\t\t\t\t\t\ttitle: '시간이 잘 못 입력되었습니다.',\n\t\t\t\t\t\ttext: '종료시간이 더 빠릅니다.',\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t} else if (!this.isValidDiaryTeacher()) {\n\t\t\t\t\tthis.$notify({\n\t\t\t\t\t\ttitle: '지도한 선생님을 입력해주세요',\n\t\t\t\t\t\ttext: '다시 입력해주세요',\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t} else if (!this.isValidDiaryLesson()) {\n\t\t\t\t\tthis.$notify({\n\t\t\t\t\t\ttitle: '수업한 내용을 입력해주세요',\n\t\t\t\t\t\ttext: '다시 입력해주세요',\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tStudentService.addStudentDiary({\n\t\t\t\t\tstudent_id: this.Student._id,\n\t\t\t\t\tteacher: this.Diary.teacher,\n\t\t\t\t\tlesson_type: this.Diary.lesson_type,\n\t\t\t\t\tlesson_time: JSON.stringify(this.Diary.lesson_time),\n\t\t\t\t\tlesson_about: this.Diary.lesson_about,\n\t\t\t\t})\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\tthis.$notify({\n\t\t\t\t\t\t\ttitle: response.data.msg,\n\t\t\t\t\t\t\ttext: '성공!',\n\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.Pay.Count++;\n\t\t\t\t\t\tthis.Pay.Time += parseFloat(Utility.duration(response.data.Diary.lesson_time.start, response.data.Diary.lesson_time.end));\n\t\t\t\t\t\tthis.noneCompletedDiarys.push(response.data.Diary);\n\t\t\t\t\t\tconsole.log('init');\n\t\t\t\t\t\tSMSService.sendSMS({\n\t\t\t\t\t\t\tto: this.Student.parent_phone,\n\t\t\t\t\t\t\ttext: this.Student.name + '학생의 수업 내용입니다.\\n' + Utility.LessonInfo(response.data.Diary),\n\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t\t\tconsole.log('success' + response.data);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\t\t\tthis.$notify({\n\t\t\t\t\t\t\t\t\ttitle: '메세지 전송에 실패하였습니다.',\n\t\t\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tconsole.log('send sms error' + error.message);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tthis.$notify({\n\t\t\t\t\t\t\ttitle: '실패..',\n\t\t\t\t\t\t\ttext: '실패..',\n\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconsole.log('diary error' + error.message);\n\t\t\t\t\t});\n\t\t\t},\n\t\t},\n\t\tcomponents: {\n\t\t\tSelectForm,\n\t\t\tDiaryStudent,\n\t\t\tDate,\n\t\t\tTime,\n\t\t},\n\t};\n</script>\n"]}]}